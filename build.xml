<project default="test">
    <property name="version" value="0.1"/>
    <!--
    <property name="build.compiler" value="gcj"/>
    -->

    <target name="clean">
        <delete dir="build"/>
    </target>

    <path id="classpath.lib">
        <fileset dir="src/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="classpath">
        <fileset dir="src/lib">
            <include name="**/*.jar"/>
        </fileset>
    	<fileset dir="build/parser">
    		<include name="parser.jar"/>
    	</fileset>
    </path>

    <target name="compile" depends="parser">
        <mkdir dir="build/classes"/>
        <javac srcdir="src" destdir="build/classes" debug="on">
            <classpath refid="classpath"/>
        </javac>
    </target>

    <target name="parser">
    	<mkdir dir="build/parser/net/sourceforge/mayfly/parser"/>
        <java classname="antlr.Tool" fork="true" failonerror="true">
            <classpath refid="classpath"/>
            <arg value="-o"/>
            <arg value="build/parser/net/sourceforge/mayfly/parser"/>
            <arg value="parser/sql.g"/>
        </java>

    	<!-- All this jar stuff is for eclipse, mainly, because compiler
            warning setting are per-project, not per-directory -->
    	<mkdir dir="build/parser/classes"/>
        <javac srcdir="build/parser/net/sourceforge/mayfly/parser" destdir="build/parser/classes">
        	<classpath refid="classpath.lib"/>
    	</javac>
        <jar jarfile="build/parser/parser.jar" basedir="build/parser/classes"/>
    </target>

	<!-- target name="javadoc">
        <mkdir dir="build/apidocs"/>
        <javadoc packagenames="org.tinytemplate"
            sourcepath="src"
            windowtitle="Tiny Template version ${version}"
            version="true"
            bottom="Tiny Template version ${version}.  For more information see &lt;a href=&quot;http://www.tinytemplate.org/&quot;&gt;tinytemplate.org&lt;a&gt;."
            destdir="build/apidocs">
            <classpath refid="classpath"/>
        </javadoc>
    </target -->

    <path id="test.classpath">
        <path refid="classpath"/>
        <fileset dir="test/lib">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement location="build/classes"/>
    </path>

    <path id="runtest.classpath">
        <path refid="test.classpath"/>
        <pathelement location="build/test-classes"/>
    </path>

    <target name="compile-tests" depends="compile">
        <mkdir dir="build/test-classes"/>
        <javac srcdir="test" destdir="build/test-classes">
            <classpath refid="test.classpath"/>
        </javac>
    </target>

    <target name="test" depends="compile-tests">
    	<!-- Don't see an easy way to find the tests in this case
        <java classname="junit.textui.TestRunner"
            classpathref="runtest.classpath"
            fork="yes" failonerror="yes">
            <arg value="net.sourceforge.mayfly.SqlTest"/>
        </java>
        -->
        <junit fork="yes" haltonfailure="true" haltonerror="true">
	        <classpath refid="runtest.classpath"/>
            <formatter usefile="false" type="brief"/>
            <batchtest>
                <fileset dir="test">
        	        <include name="**/*Test.java"/>
        	    </fileset>
        	</batchtest>
        </junit>

    </target>

    <!-- target name="jar" depends="compile,test">
        <jar jarfile="build/tinytemplate.jar" basedir="build/classes"/>
    </target>

    <target name="dist" depends="jar,javadoc">
        <zip destfile="tinytemplate-${version}.zip">
            <fileset dir="build">
                <include name="tinytemplate.jar"/>
                <include name="apidocs/**"/>
            </fileset>
            <fileset dir="lib">
                <include name="${jdom}"/>
                <include name="${xpp3}"/>
            </fileset>
            <fileset dir=".">
                <include name="README.txt"/>
                <include name="src/**"/>
                <include name="test/**"/>
            </fileset>
        </zip>
    </target -->
</project>
