<project default="test">
    <property name="version" value="0.2"/>
    <!--
    <property name="build.compiler" value="gcj"/>
    -->

    <target name="clean">
        <delete dir="build"/>
    </target>

    <path id="classpath.lib">
        <fileset dir="src/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="classpath">
        <fileset dir="src/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <target name="compile">
        <mkdir dir="build/classes"/>
        <javac srcdir="src" destdir="build/classes" debug="on">
            <classpath refid="classpath"/>
        </javac>
    </target>

    <!-- Although we use javadoc syntax for the benefit of tools like Eclipse and IDEA,
        we generate the actual documentation with doxygen.  javadoc/gjdoc provide very little help
        for things like @internal, so going with doxygen seems nicer than writing
        a bunch of custom doclets. -->
    <target name="doc" description="regenerate documentation from source">
        <mkdir dir="build/doc"/>
        <exec executable="doxygen">
            <arg value="doc/Doxyfile"/>
        </exec>
    </target>

    <path id="test.classpath">
        <path refid="classpath"/>
        <fileset dir="test/lib">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement location="build/classes"/>
    </path>

    <path id="runtest.classpath">
        <path refid="test.classpath"/>
        <pathelement location="build/test-classes"/>
    </path>

    <target name="compile-tests" depends="compile">
        <mkdir dir="build/test-classes"/>
        <javac srcdir="test" destdir="build/test-classes">
            <classpath refid="test.classpath"/>
        </javac>
    </target>

    <target name="test" depends="compile-tests" description="run unit tests">
        <!-- Don't see an easy way to find the tests in this case
        <java classname="junit.textui.TestRunner"
            classpathref="runtest.classpath"
            fork="yes" failonerror="yes">
            <arg value="net.sourceforge.mayfly.SqlTest"/>
        </java>
        -->
        <junit fork="yes" haltonfailure="true" haltonerror="true">
            <classpath refid="runtest.classpath"/>
            <formatter usefile="false" type="brief"/>
            <batchtest>
                <fileset dir="test">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>

    </target>

    <target name="jar" depends="compile,test">
        <jar jarfile="build/mayfly-${version}.jar">
            <fileset dir="build/classes"/>
        </jar>
    </target>

    <target name="dist" depends="jar,doc">
        <zip destfile="build/mayfly-${version}-src-ide.zip">
            <fileset dir="src">
            	<include name="net/**" />
        	</fileset>
        </zip>
        <zip destfile="build/mayfly-${version}.zip">
            <fileset dir="build">
                <include name="mayfly-${version}.jar"/>
                <include name="mayfly-${version}-src-ide.zip"/>
                <include name="doc/**"/>
            </fileset>
            <fileset dir="src/lib">
                <include name="*.jar"/>
            </fileset>
            <fileset dir=".">
                <include name="DESCRIPTION.txt"/>
                <include name="IDEAS.txt"/>
                <include name="LICENSE-2.0.txt"/>
            </fileset>
        </zip>
        <zip destfile="build/mayfly-${version}-src.zip">
            <fileset dir=".">
                <include name="src/**"/>
                <include name="test/**"/>
            </fileset>
            <fileset dir=".">
                <include name="DESCRIPTION.txt"/>
                <include name="IDEAS.txt"/>
                <include name="LICENSE-2.0.txt"/>
            </fileset>
        </zip>
    </target>

</project>
